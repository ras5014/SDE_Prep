-> Make notes about nextJS file structure with shadcn ui
-> Make notes about different ways we can use CSS in nextJS, Write about "clsx" library
-> Make notes about Next Image and how it does all optimizations under the hood for us
-> One benefit of using layouts in Next.js is that on navigation, only the page components update while the layout won't re-render. This is called partial rendering
-> Use NextJS Tutorial Images in the notes
-> Make notes on next Link component
    - To improve the navigation experience, Next.js automatically code splits your application by route segments. This is different from a traditional React SPA, where the browser loads all your application code on the initial page load.
    - Splitting code by routes means that pages become isolated. If a certain page throws an error, the rest of the application will still work. This is also less code for the browser to parse, which makes your application faster.
    - Furthermore, in production, whenever <Link> components appear in the browser's viewport, Next.js automatically prefetches the code for the linked route in the background. By the time the user clicks the link, 
      the code for the destination page will already be loaded in the background, and this is what makes the page transition near-instant!

-> Pattern: Showing active links
            A common UI pattern is to show an active link to indicate to the user what page they are currently on. To do this, you need to get the user's current path from the URL. 
            Next.js provides a hook called usePathname() that you can use to check the path and implement this pattern.
            - Give example about clsx library here
            
-> Using Server Components to fetch data
    - By default, Next.js applications use React Server Components. Fetching data with Server Components is a relatively new approach and there are a few benefits of using them:
    - Server Components support JavaScript Promises, providing a solution for asynchronous tasks like data fetching natively. You can use async/await syntax without needing useEffect, useState or other data fetching libraries.
    - Server Components run on the server, so you can keep expensive data fetches and logic on the server, only sending the result to the client.
    - Since Server Components run on the server, you can query the database directly without an additional API layer. This saves you from writing and maintaining additional code.